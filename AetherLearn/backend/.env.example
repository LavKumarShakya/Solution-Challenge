# ==============================================
# AetherLearn Learning Path - Environment Configuration
# ==============================================

# MongoDB Configuration
# For local development: mongodb://localhost:27017
# For production: Use MongoDB Atlas connection string
MONGODB_URL=mongodb://localhost:27017
MONGODB_DB=aetherlearn

# JWT Authentication
# IMPORTANT: Change the SECRET_KEY for production deployment
SECRET_KEY=your_super_secret_key_change_in_production_immediately
ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30

# Google Cloud Platform Configuration
# ==============================================
# Path to your service account JSON file
# For production, you can also use GOOGLE_APPLICATION_CREDENTIALS environment variable
# or GCP instance metadata for authentication
GOOGLE_APPLICATION_CREDENTIALS=path/to/your/service-account-credentials.json

# Your Google Cloud Project ID
GCP_PROJECT_ID=your-gcp-project-id

# Google Cloud region (recommended: us-central1, us-east1, europe-west1)
GCP_LOCATION=us-central1

# Vertex AI Configuration
# ==============================================
# These can be the same as GCP settings above, or different if using separate projects
VERTEX_AI_PROJECT_ID=your-gcp-project-id
VERTEX_AI_LOCATION=us-central1

# Vertex AI Search Data Store ID
# This must be created in the Google Cloud Console under Vertex AI Search
# Instructions: https://cloud.google.com/vertex-ai-search/docs/create-data-store
VERTEX_AI_DATASTORE_ID=your-vertex-ai-search-datastore-id

# Vertex AI Model Configuration
# Available models: gemini-1.5-pro, gemini-1.5-flash
# gemini-1.5-pro: Higher quality, more expensive
# gemini-1.5-flash: Faster, lower cost, good for most use cases
VERTEX_AI_MODEL=gemini-1.5-pro

# Token limits for Vertex AI API calls
VERTEX_AI_TOKEN_LIMIT=30000
VERTEX_AI_MAX_OUTPUT_TOKENS=8192

# Content Discovery and Optimization
# ==============================================
# Maximum number of content sources to include in a learning path
MAX_CONTENT_SOURCES=15

# Maximum content items to retrieve per search (higher = more comprehensive, slower)
MAX_CONTENT_ITEMS=30

# Filter out content older than this many days (365 = 1 year)
MAX_CONTENT_AGE_DAYS=365

# Minimum quality score for content inclusion (0.0 to 1.0)
CONTENT_QUALITY_THRESHOLD=0.7

# Enable caching for similar queries (recommended: true)
ENABLE_CONTENT_CACHING=true

# How long to keep cached results in hours
CACHE_EXPIRY_HOURS=24

# Production Environment Settings
# ==============================================
# Set to "production" for production deployment
ENVIRONMENT=development

# CORS Configuration for production
# Add your frontend domain(s) here for production
CORS_ORIGINS=http://localhost:3000,http://localhost:8080,https://yourdomain.com

# Logging Configuration
LOG_LEVEL=INFO

# Rate Limiting (requests per minute per IP)
RATE_LIMIT_PER_MINUTE=60

# Security Settings
# ==============================================
# Set to true in production to require HTTPS
REQUIRE_HTTPS=false

# Session timeout in minutes
SESSION_TIMEOUT_MINUTES=60

# API Key for external integrations (if needed)
# API_KEY=your-optional-api-key

# Performance Tuning
# ==============================================
# Number of worker processes for Uvicorn (production)
WORKERS=4

# Maximum concurrent requests
MAX_CONNECTIONS=1000

# Request timeout in seconds
REQUEST_TIMEOUT=300

# Monitoring and Analytics
# ==============================================
# Enable usage analytics and monitoring
ENABLE_ANALYTICS=true

# Google Analytics tracking ID (optional)
# GA_TRACKING_ID=G-XXXXXXXXXX

# Sentry DSN for error tracking (optional)
# SENTRY_DSN=https://your-sentry-dsn